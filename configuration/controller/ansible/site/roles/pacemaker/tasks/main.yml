---
# tasks file for pacemaker

- name: Install pacemaker packages
  yum:
    name: '{{ item }}'
    state: present
  with_items: '{{ pacemaker_packages }}'
  when: ha == true
  tags: pcs

- name: Set up Corosync's configuration file
  template:
    src: corosync.conf
    dest: '/etc/corosync/corosync.conf'
  when: ha == true
  tags: pcs

- name: Generate corosync's authentication key
  command: corosync-keygen -l
  args:
    creates: '/etc/corosync/authkey'
  when: ha == true
  tags: pcs

- name: Copy corosync's authentication key to the secondary controller
  fetch:
    dest: '/etc/corosync/authkey'
    src: '/etc/corosync/authkey'
    flat: yes
  when: primary == false and ha == true
  delegate_to: '{{ play_hosts[0] }}'
  tags: pcs

- name: Start corosync service
  service:
    name: corosync
    state: restarted
  when: ha == true
  tags: pcs

- name: Start pcsd service
  service:
    name: pcsd
    state: restarted
  when: ha == true
  tags: pcs

- name: Enable pcsd service
  service:
    name: pcsd
    enabled: yes
  when: ha == true
  tags: pcs

- name: Set a passwd for the user hacluster
  user:
    name: hacluster
    password: '{{ pacemaker_user_pwd | password_hash("sha512", ansible_hostname) }}'
  when: ha == true
  tags: pcs

- name: Authenticate the controllers
  command: pcs cluster auth --all -u 'hacluster' -p '{{ pacemaker_user_pwd }}'
  args:
    creates: '/var/lib/pcsd/tokens'
  run_once: true
  when: ha == true
  tags: pcs

- name: Start pacemaker service
  service:
    name: pacemaker
    state: restarted
  when: ha == true
  tags: pcs

- name: Setup pacemaker properties
  command: pcs property set '{{ item }}'
  with_items: '{{ pacemaker_properties }}'
  when: ha == true
  tags: pcs

- name: Setup pacemaker resource defaults
  command: pcs resource defaults '{{ item }}'
  with_items: '{{ pacemaker_resource_defaults }}'
  when: ha == true
  tags: pcs

- name: Add primary dummy resource
  pcs_resource:
    name: 'primary'
    resource_class: 'ocf'
    resource_type: 'Dummy'
    options: 'op monitor interval=179s --group Trinity'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add secondary dummy resource
  pcs_resource:
    name: 'secondary'
    resource_class: 'ocf'
    resource_type: 'Dummy'
    options: 'op monitor interval=181s --group Trinity-secondary'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add floating IP resource
  pcs_resource:
    name: 'trinity-ip'
    resource_class: 'ocf'
    resource_type: 'IPaddr2'
    options: 'ip={{ trix_ctrl_ip }} op monitor interval=29s --group Trinity'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker order constraint - Trinity then Trinity-secondary
  pcs_constraint:
    constraint_type: 'order'
    resource1: 'Trinity'
    resource2: 'Trinity-secondary'
    score: 'INFINITY'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker colocation constraint - Trinity-secondary not with Trinity
  pcs_constraint:
    constraint_type: 'colocation'
    resource1: 'Trinity-secondary'
    resource2: 'Trinity'
    score: '-INFINITY'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker resource group Trinity-fs
  pcs_resource:
    name: 'fs'
    resource_type: 'Dummy'
    options: 'op monitor interval=0 --group Trinity-fs'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker order constraint - Trinity then Trinity-fs
  pcs_constraint:
    constraint_type: 'order'
    resource1: 'Trinity'
    resource2: 'Trinity-fs'
    score: 'INFINITY'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker colocation constraint - Trinity-fs with Trinity
  pcs_constraint:
    constraint_type: 'colocation'
    resource1: 'Trinity-fs'
    resource2: 'Trinity'
    score: 'INFINITY'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker resource group Trinity-stack
  pcs_resource:
    name: 'stack'
    resource_type: 'Dummy'
    options: 'op monitor interval=0 --group Trinity-stack'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker colocation constraint - Trinity-stack with Trinity
  pcs_constraint:
    constraint_type: 'colocation'
    resource1: 'Trinity-stack'
    resource2: 'Trinity'
    score: 'INFINITY'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add pacemaker order constraint - Trinity-fs then Trinity-stack
  pcs_constraint:
    constraint_type: 'order'
    resource1: 'Trinity-fs'
    resource2: 'Trinity-stack'
    score: 'INFINITY'
    state: present
  when: primary == True and ha == True
  tags: pcs

- name: Add colouring to pcs status
  file:
    src: pcs-status.sh
    dest: '/etc/profile.d/pcs-status.sh'
  when: ha == true
  tags: pcs
