
######################################################################
# TrinityX
# Copyright (c) 2016  ClusterVision B.V.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (included with the sources) for more
# details.
######################################################################


################################################################################
##
##  CONFIGURATION FILE for COMPUTE IMAGE CREATION
##
################################################################################


# INFORMATION:
# ============
# This file on its own is not enough to configure fully a compute image. It
# creates a basic directory and sets up a few things, so that the real
# configuration can happen later.
# The name of the configuration file that is applied to the newly created
# directory is contained in the variable NODE_IMG_CONFIG.


#===============================================================================
#
#  GENERAL CONFIGURATION
#
#===============================================================================

# Directory in which the post scripts are located.
# If it is a relative path, then it is relative to the directory where this file
# resides.

POSTDIR="images"

# Only one post script to run.
# It will call the configuration tool recursively

POSTLIST=( image-create )


#-----------------------------------------------------------
# node-image
#-----------------------------------------------------------

# Path to the new compute image
# If it is a relative path, then it will be relative to $TRIX_IMAGES in
# /etc/trinity.sh.

NODE_IMG_NAME="compute-$(date +%F-%H-%M)"

# Initial RPM with which the image will be kickstarted. This sets the version of
# CentOS that will be installed.
# If not set, all files called "centos-release*.rpm" will be installed (which
# will work only if you have ONE such file in the files folder...).
# The file must be located in the "configuration/images/image-create" directory.

NODE_INITIAL_RPM="centos-release-7-3.1611.el7.centos.x86_64.rpm"

# Configuration to apply to the newly created image
# Comment out to do only the base OS installation and leave the image
# unconfigured.

NODE_IMG_CONFIG="images-setup-compute.cfg"

# Use the host repositories and yum cache for the installation if the image?
#
# Enabling the host repositories is useful for doing special, super lightweight
# installations where a full suite of post scripts is not required. In a
# standard image configuration, the repos in the image are set up the same way
# as on the controller, so using the host repos is not required.
# Note that the host repos are only available at package installation time, and
# not during the shell scripts.
#
# Disabling the host yum cache is only useful in special cases, for example when
# installing a different OS version in a image (but even then it should behave
# reasonably well). Note that when the cache is disabled, yum will still use the
# rpm packages already downloaded on the host, but anything downloaded in the
# chroot of the image will not be shared back with the host.
# When enabled, the host yum cache is available at all times during the
# configuration.
#
# In most cases you will only use the yum cache.
# Comment out to disable either of them, set to 1 to enable.

#NODE_HOST_REPOS=1
NODE_HOST_CACHE=1

# Root password for the newly created image
# If unset or empty, a random one will be generated

#NODE_ROOT_PW=

