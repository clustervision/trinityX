---
- hosts: controllers
  serial: 1

  # List of roles to apply to the controllers, in the order in which they will run.
  # NOTE: These and their default configurations can be found in the "roles/"
  #       directory.

  roles:
    - role: trinity/prepare
      tags: always

    - role: trinity/yml-check
      tags: always

    - role: trinity/init
      tags: 
        - init
        - authentication

    - role: trinity/hostname
      tags: hostname

    - role: trinity/pwquality
      tags: pwquality

    - role: trinity/no_proxy
      no_proxy:
        - ".{{ trix_domain }}"
        - "{{ trix_ctrl_ip }}"
        - "{{ trix_external_fqdn }}"
        - "{{ trix_ctrl_hostname }}"
        - "{{ trix_ctrl1_hostname }}"
        - "{{ trix_ctrl2_hostname }}"
        - "{{ trix_ctrl3_hostname|default(trix_ctrl1_hostname) }}"
        - "{{ trix_ctrl4_hostname|default(trix_ctrl2_hostname) }}"
      tags: noproxy

    - role: trinity/repos
      tags: repos

    - role: trinity/packages
      tags: packages

    - role: OndrejHome.pcs-modules-2
      tags: ha,pcs,pacemaker,shared-fs

    - role: trinity/sync-secrets
      sync_controller: '{{ primary_controller | default(trix_ctrl1_hostname) }}'
      tags: ha,sync-secrets
      when: ha | default(False)

    - role: trinity/pacemaker
      fence_ipmilan_enabled: '{{ enable_ipmilan_fencing | default(True) }}'
      tags: ha,pcs,pacemaker
      when: ha | default(False)

    - role: trinity/shared-fs
      drbd_shared_resource_stonith_enabled: '{{ enable_ipmilan_fencing | default(True) }}'
      tags: ha,shared-fs
      when: ha | default(False)

    - role: trinity/trix-tree
      tags: 
        - trix-tree
        - authentication

    - role: trinity/rdma-centos
      tags: rdma-centos

    - role: trinity/nfs
      nfs_rpccount: 256
      nfs_enable_rdma: false
      nfs_exports_path: '{{ trix_local }}/etc/exports.d'
      nfs_exports:
        - path: '{{ trix_shared }}'
          options: '-rw,sync,no_wdelay,no_root_squash {{ all_ctrl_hostname | join(" ") }} {{ trix_ctrl_hostname if ha else "" }} *(ro)'
        - path: '{{ trix_home }}'
          options: '*(rw,async,no_root_squash)'
        - path: '{{ trix_sync }}'
          options: '-ro,async,no_root_squash {{ all_ctrl_hostname | join(" ") }}'
      nfs_remote_mask: '{{ shared_fs_disks }}'
      nfs_prefix_path: '{{ shared_fs_prefix }}'
      # nfs_use_mask overwrites the exported path to match the actual paths for shared disks
      nfs_use_mask: "{{ ha | default(False) }}"
      tags: nfs

    - role: trinity/nfs-mounts
      nfs_mounts:
      - path: '{{ trix_shared }}'
        remote: '{{ trix_ctrl_hostname }}:{{ trix_shared }}'
        options: 'defaults,nfsvers=4,rw,retrans=4,_netdev'
      - path: '{{ trix_home }}'
        remote: '{{ trix_ctrl_hostname }}:{{ trix_home }}'
        options: 'defaults,nfsvers=4,rw,retrans=4,noatime,_netdev'
      nfs_remote_mask: '{{ shared_fs_disks }}'
      nfs_prefix_path: '{{ shared_fs_prefix }}'
      # nfs_use_mask enforces the mounting of even non nfs shared disks/mount
      nfs_use_mask: "{{ ha | default(False) }}"
      # nfs_only_xmount will only mount the mounts listed in nfs_mounts that are set to be xmount
      nfs_only_xmount: "{{ ha | default(False) }}"
      tags: shared-fs,nfs-mounts

    - role: trinity/cv_support
      tags: cv_support

    - role: trinity/tunables
      tags: tunables

    - role: trinity/firewalld
      tags: firewalld

    - role: trinity/chrony
      tags: chrony

    - role: trinity/ssh
      tags: ssh

    # -----
    # - role: trinity/fail2ban
    #   tags: fail2ban
    # -----

    - role: trinity/ssl-cert
      ssl_cert_country: 'NL'
      ssl_cert_locality: 'Amsterdam'
      ssl_cert_organization: 'ClusterVision Solutions B.V.'
      ssl_cert_state: 'Noord Holland'
      ssl_cert_altname: 
        - '{{ trix_ctrl_hostname }}.{{ trix_domain }}'
        - '{{ ansible_fqdn }}'
        - '{{ trix_external_fqdn }}'
      ssl_cert_altip: 
        - '{{ all_ctrl_ip }}'
        - '{{ trix_ctrl_external_ip | default("") }}'
      ssl_cert_days: '36500'
      tags: 
        - ssl-cert
        - authentication  

    - role: trinity/bind
      bind_db_path: '{{ trix_local }}/var/lib/named'
      bind_dnssec_enable: "no"
      bind_dns_forwarders: '{{ trix_dns_forwarders }}'
      tags: bind

    - role: trinity/openldap
      openldap_server_dir_path: "{{ trix_ha if ha else trix_local }}/var/lib/ldap"
      openldap_server_conf_path: "{{ trix_ha if ha else trix_local }}/etc/openldap/slapd.d"
      openldap_host: '{{ trix_ctrl_hostname }}.{{ trix_domain }}'
      when: enable_authentication|default(True)
      tags: 
        - openldap
        - authentication

    - role: trinity/obol
      users_home_path: '{{ trix_home }}'
      ldap_host: '{{ trix_ctrl_hostname }}.{{ trix_domain }}'
      when: enable_authentication|default(True)
      tags: 
        - obol
        - authentication

    - role: trinity/sssd
      sss_allowed_groups:
        - '{{ admin_group }}'
      sss_ldap_hosts:
        - '{{ trix_ctrl_hostname }}.{{ trix_domain }}'
      when: enable_authentication|default(True)
      tags: 
        - sssd
        - authentication

    - role: trinity/mariadb
      mariadb_db_path: "{{ trix_ha if ha else trix_local }}/var/lib/mysql"
      tags: mariadb

    - role: trinity/openhpc
      nfs_exports_path: '{{ trix_local }}/etc/exports.d'
      when: enable_openhpc
      tags: openhpc

    - role: trinity/slurm
      slurm_ctrl: '{{ trix_ctrl_hostname }}'
      slurm_ctrl_ip: '{{ trix_ctrl_ip }}'
      #slurm_ctrl_list: '{{ trix_ctrl1_hostname }},{{ trix_ctrl2_hostname }}'
      slurm_ctrl_list: '{{ all_ctrl_hostname | join(",") }}'
      slurm_conf_path: '{{ trix_shared }}/etc/slurm'
      #slurm_spool_path: '{{ trix_local }}/var/spool/slurm'
      slurm_spool_path: "{{ trix_ha if ha else trix_local }}/var/spool/slurm"
      munge_conf_path: '{{ trix_shared }}/etc/munge'
      slurmdbd_sql_user: 'slurm_accounting'
      slurmdbd_sql_db: 'slurm_accounting'
      when: "'slurm' in workload_manager "
      tags: slurm

    - role: trinity/slurm-sbank
      when: "'slurm' in workload_manager "
      tags: slurm, sbank

    - role: trinity/kubernetes
      tags: kubernetes, k3s
      when: "'k3s' in workload_manager"

    - role: trinity/config-slurm
      cs_admin_group: "{{ admin_group }}"
      tags: config-slurm

    - role: trinity/config-genders
      cg_admin_group: "{{ admin_group }}"
      tags: config-genders

    - role: trinity/config-manager
      cm_admin_group: "{{ admin_group }}"
      tags: config-manager

    - role: trinity/luna2
      ssl_certificate: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.crt"
      ssl_certificate_key: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.key"
      luna2_cluster:
        cluster:
          domain_search: '{{ resolv_search_domains }}'
          dns_forwarders: '{{ trix_dns_forwarders }}'
        ha: '{{ True if ha or cloud_install else False }}'
        nosharedip: '{{ True if cloud_install and not ha else False }}'
        frontend_address: '{{ trix_ctrl_ip }}'
        frontend_hostname: '{{ trix_ctrl_hostname }}'
        controllers: 
          hostnames: '{{ all_ctrl_hostname }}'
          ip_addresses: '{{ all_ctrl_ip }}'
        shadow_controllers:
          hostnames: '{{ cloud_ctrl_hostname|default([]) }}'
          ip_addresses: '{{ cloud_ctrl_ip|default([]) }}'
        networks:
        - name: '{{ trix_domain }}'
          function: 'default'
          ip: '{{ trix_cluster_net }}'
          prefix: '{{ trix_cluster_netprefix }}'
          start_ip: '{{ trix_cluster_dhcp_start }}'
          end_ip: '{{ trix_cluster_dhcp_end }}'
          type: 'ethernet'
        - name: 'ipmi'
          function: 'bmc'
          ip: '{{ trix_bmc_net }}'
          prefix: '{{ trix_bmc_netprefix }}'
          type: 'ethernet'
        - name: 'ib'
          function: 'low-latency'
          ip: '{{ trix_infiniband_net }}'
          prefix: '{{ trix_infiniband_netprefix }}'
          type: 'infiniband'
        shadow_networks: "{{ cloud_networks|default({}) }}"
      tags: luna

    - role: trinity/resolv
      bind_dns_forwarders: '{{ trix_dns_forwarders }}'
      resolv_server: '{{ trix_ctrl_ip }}'
      tags: resolv

    - role: trinity/rsyslog
      syslog_listeners:
        - name: default
          proto: tcp
          port: 514
        - name: default
          proto: udp
          port: 514
      syslog_file_template_rules:
        - name: controllers
          type: string
          content: '/var/log/cluster-messages/%HOSTNAME%.messages'
          field: '$fromhost-ip'
          criteria: startswith
          rule: '{{ trix_cluster_net.split(".")[:trix_cluster_netprefix//8]|join(".") }}'
      tags: rsyslog

    - role: trinity/aria2c
      tags: aria2c

    - role: trinity/ood
      enable_ssl: true
      ood_auth_provider: '{{ ood_authentication_provider if enable_authentication else "pam" }}'
      ood_ssl_certificate: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.crt"
      ood_ssl_certificate_key: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.key"
      ood_login_host: "{{ trix_external_fqdn }}"
      ood_ldap_host: "{{ trix_ctrl_ip }}"
      ood_admin_group: "{{ admin_group }}"
      tags: ood, ood-core
      when: enable_ood

    - role: trinity/ood-apps
      ood_apps_admin_group: "{{ admin_group }}"
      tags: ood, ood-apps
      when: enable_ood

    # - role: trinity/prometheus-auth
    #   prometheus_auth_credentials_file: '/etc/trinity/passwords/prometheus/admin.txt'
    #   tags: prometheus-auth, prometheus, monitoring

    - role: trinity/prometheus-server
      # Prometheus server
      prometheus_server_config_dir: "{{trix_etc}}/prometheus_server"
      prometheus_server_db_dir: "{{trix_local}}/var/lib/prometheus_server"
      prometheus_server_additional_system_groups:
        - "{{ssl_cert_group}}"
      prometheus_server_additional_sd:
        - job_name: luna_nodes
          http_sd_configs:
          - url: "{{ luna_protocol }}://localhost:7050/export/prometheus"
            tls_config:
              insecure_skip_verify: true
      prometheus_server_alertmanagers:
        - target: "localhost:9093"
          tls:
            enabled: true
            insecure_skip_verify: true
          basic_auth:
            enabled: true
            credentials_file: '/etc/trinity/passwords/prometheus/admin.txt'
      prometheus_server_tls:
        enabled: true
        cert_file: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.crt"
        key_file: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.key"
      tags: prometheus-server, prometheus, monitoring


    - role: trinity/prometheus-alertmanager
      # Prometheus alertmanager
      prometheus_alertmanager_config_dir: "{{trix_etc}}/prometheus_alertmanager"
      prometheus_alertmanager_db_dir: "{{trix_local}}/var/lib/prometheus_alertmanager"
      prometheus_alertmanager_mail: "{{ administrator_email }}"
      prometheus_alertmanager_additional_system_groups:
        - "{{ssl_cert_group}}"
      prometheus_alertmanager_cluster:
        listen-address: "{{ ansible_fqdn }}:6783"
        peers:
          - "{{ trix_ctrl_hostname }}:6783"
      prometheus_alertmanager_auth:
        enabled: true
        credentials_file: '/etc/trinity/passwords/prometheus/admin.txt'
        group_access: "{{ admin_group }}"
      prometheus_alertmanager_tls:
        enabled: true
        cert_file: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.crt"
        key_file: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.key"
      # below depends on the above 
      #   role: trinity/prometheus-server -> prometheus_server_tls/enabled: true == https
      prometheus_alertmanager_web_protocol: "https"
      tags: prometheus-alertmanager, prometheus, monitoring

    - role: trinity/prometheus-node-exporter
      # Prometheus node exporter
      prometheus_node_exporter_config_dir: "{{trix_etc}}/prometheus_node_exporter"
      prometheus_node_exporter_db_dir: "{{trix_local}}/var/lib/prometheus_node_exporter"
      prometheus_node_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_node_exporter.yml"
      prometheus_node_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-node-exporter, prometheus, monitoring

    - role: trinity/prometheus-infiniband-exporter
      # Prometheus infiniband exporter
      prometheus_infiniband_exporter_system_user: root
      prometheus_infiniband_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_infiniband_exporter.yml"
      prometheus_infiniband_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-infiniband-exporter, prometheus, monitoring

    - role: trinity/prometheus-slurm-exporter
      # Prometheus slurm exporter
      prometheus_slurm_exporter_system_user: root
      prometheus_slurm_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_slurm_exporter.yml"
      prometheus_slurm_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-slurm-exporter, prometheus, monitoring

    - role: trinity/prometheus-slurm-job-exporter
      # Prometheus slurm_job exporter
      prometheus_slurm_job_exporter_system_user: root
      prometheus_slurm_job_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_slurm_job_exporter.yml"
      prometheus_slurm_job_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-slurm-job-exporter, prometheus, monitoring

    - role: trinity/prometheus-ipmi-exporter
      # Prometheus ipmi exporter
      prometheus_ipmi_exporter_system_user: root
      prometheus_ipmi_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_ipmi_exporter.yml"
      prometheus_ipmi_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-ipmi-exporter, prometheus, monitoring

    - role: trinity/prometheus-nvidia-exporter
      # Prometheus ipmi exporter
      prometheus_nvidia_exporter_system_user: root
      prometheus_nvidia_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_nvidia_exporter.yml"
      prometheus_nvidia_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-nvidia-exporter, prometheus, monitoring

    - role: trinity/prometheus-ha-exporter
      # Prometheus ipmi exporter
      prometheus_ha_exporter_system_user: root
      prometheus_ha_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_ha_exporter.yml"
      prometheus_ha_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-ha-exporter, prometheus, monitoring, ha
      when: ha | default(False)

    - role: trinity/prometheus-lshw-exporter
      # Prometheus ipmi exporter
      prometheus_lshw_exporter_system_user: root
      prometheus_lshw_exporter_sd_file: "{{trix_etc}}/prometheus_server/file_sd/trix/controllers_lshw_exporter.yml"
      prometheus_lshw_exporter_targets: "{{ (all_ctrl_ip) | zip(all_ctrl_hostname, [trix_domain] * (num_ctrl | int)) }}"
      tags: prometheus-lshw-exporter, prometheus, monitoring, lshw

    - role: trinity/grafana
      ldap_auth: "{{ enable_authentication|default(True) }}"
      enable_ssl: true
      grafana_admin_group: "{{ admin_group }}"
      grafana_prometheus_url: "https://{{ trix_ctrl_local_ip }}:9090"
      grafana_alertmanager_url: "https://{{ trix_ctrl_local_ip }}:9093"
      grafana_alertmanager_basic_auth_file: '/etc/trinity/passwords/prometheus/admin.txt'
      ssl_certificate: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.crt"
      ssl_certificate_key: "{{ ssl_cert_path }}/{{ ansible_fqdn }}.key"
      tags: grafana, monitoring

    - role: trinity/alertx
      alertx_enable_drainer: "{{ True if 'slurm' in workload_manager else False }}"
      tags: monitoring, alertx

    - role: trinity/logrotate
      tags: logrotate

    - role: trinity/cleanup-legacy
      tags: cleanup-legacy

      # wrapup role contains a mix bag of things to be run to conclude the setup.
      # expect the unexpected!
    - role: trinity/wrapup
      fence_ipmilan_enabled: '{{ enable_ipmilan_fencing | default(True) }}'
      tags: wrapup

  environment:
    no_proxy: ".{{ trix_domain }},{{ trix_ctrl_ip }},{{ trix_external_fqdn }},{{ trix_ctrl_hostname }},{{ trix_ctrl1_hostname }},{{ trix_ctrl2_hostname }},{{ trix_ctrl3_hostname|default(trix_ctrl1_hostname) }},{{ trix_ctrl4_hostname|default(trix_ctrl2_hostname) }}"
    NO_PROXY: ".{{ trix_domain }},{{ trix_ctrl_ip }},{{ trix_external_fqdn }},{{ trix_ctrl_hostname }},{{ trix_ctrl1_hostname }},{{ trix_ctrl2_hostname }},{{ trix_ctrl3_hostname|default(trix_ctrl1_hostname) }},{{ trix_ctrl4_hostname|default(trix_ctrl2_hostname) }}"

- import_playbook: imports/cloud.yml
  when: 
    - cloud_install | default(False)
    - not in_cloud | default(False)
    - primary
  tags: cloud

  # below is when the controller is solo in the cloud where we just
  # need to create the network, image and storage for the nodes to boot
- import_playbook: imports/cloud-primary-controller.yml
  when: 
    - in_cloud | default(False)
    - primary
  tags: cloud

