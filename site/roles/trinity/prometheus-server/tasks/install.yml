---
- name: Create prometheus system group
  ansible.builtin.group:
    name: "{{prometheus_server_system_group}}"
    system: true
    state: present

- name: Create prometheus system user
  ansible.builtin.user:
    name: "{{prometheus_server_system_user}}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{prometheus_server_system_group}}"
    groups: "{{prometheus_server_additional_system_groups}}"
    createhome: false
    home: "{{ prometheus_server_db_dir }}"

- name: Create prometheus data directory
  ansible.builtin.file:
    path: "{{ prometheus_server_db_dir }}"
    state: directory
    owner: "{{prometheus_server_system_user}}"
    group: "{{prometheus_server_system_group}}"
    mode: 0755

- name: Create prometheus configuration directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0770
  with_items:
    - "{{ prometheus_server_config_dir }}"
    - "{{ prometheus_server_config_dir }}/rules"
    - "{{ prometheus_server_config_dir }}/file_sd"
    - "{{ prometheus_server_config_dir }}/file_sd/trix"
    - "{{ prometheus_server_config_dir }}/file_sd/other"

- name: Create log directory
  ansible.builtin.file:
    path: "{{ prometheus_server_log_dir }}"
    state: directory
    owner: "{{prometheus_server_system_user}}"
    group: "{{prometheus_server_system_group}}"
    mode: 0755
  when:
    - prometheus_server_log_dir | length > 0 

- name: Get prometheus binary
  block:
    - name: Download prometheus binary to local folder
      become: false
      ansible.builtin.get_url:
        url: "{{ prometheus_server_binary_url }}"
        dest: "/tmp/prometheus-{{ prometheus_server_version }}.linux-{{ go_arch }}.tar.gz"
        checksum: "sha256:{{ __prometheus_server_checksum }}"
        mode: 0644
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: Unpack prometheus binaries
      become: false
      ansible.builtin.unarchive:
        src: "/tmp/prometheus-{{ prometheus_server_version }}.linux-{{ go_arch }}.tar.gz"
        dest: "/tmp"
        creates: "/tmp/prometheus-{{ prometheus_server_version }}.linux-{{ go_arch }}/prometheus"
      check_mode: false

    - name: Propagate official prometheus and promtool binaries
      ansible.builtin.copy:
        src: "/tmp/prometheus-{{ prometheus_server_version }}.linux-{{ go_arch }}/{{ item }}"
        dest: "{{ _prometheus_server_binary_install_dir }}/{{ item }}"
        mode: 0755
        owner: root
        group: root
      with_items:
        - prometheus
        - promtool
      notify:
        - restart prometheus-server

    - name: Propagate official console templates
      ansible.builtin.copy:
        src: "/tmp/prometheus-{{ prometheus_server_version }}.linux-{{ go_arch }}/{{ item }}/"
        dest: "{{ prometheus_server_config_dir }}/{{ item }}/"
        mode: 0644
        owner: root
        group: root
      with_items:
        - console_libraries
        - consoles
      notify:
        - restart prometheus-server

- name: Create systemd service unit
  ansible.builtin.template:
    src: prometheus-server.service.j2
    dest: /etc/systemd/system/prometheus-server.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart prometheus-server


