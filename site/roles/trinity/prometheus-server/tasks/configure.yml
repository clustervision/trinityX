---
- name: Alerting rules file
  ansible.builtin.template:
    src: "alert.rules.j2"
    dest: "{{ prometheus_server_config_dir }}/rules/trix.rules"
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0640
    validate: "{{ _prometheus_server_binary_install_dir }}/promtool check rules %s"
  when:
    - not prometheus_server_agent_mode
  notify:
    - reload prometheus-server

- name: Copy custom alerting rule files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ prometheus_server_config_dir }}/rules/"
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0640
    validate: "{{ _prometheus_server_binary_install_dir }}/promtool check rules %s"
  with_fileglob: "{{ prometheus_server_alert_rules_files }}"
  when:
    - not prometheus_server_agent_mode
  notify:
    - reload prometheus-server 

- name: Configure prometheus
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_server_config_dir }}/prometheus.yml"
    force: true
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0640
    validate: "{{ _prometheus_server_binary_install_dir }}/promtool check config %s"
  notify:
    - reload prometheus-server 

- name: Configure Prometheus web
  ansible.builtin.template:
    src: prometheus.web.yml.j2
    dest: "{{ prometheus_server_config_dir }}/prometheus.web.yml"
    force: true
    owner: root
    group: "{{prometheus_server_system_group}}"
    validate: "{{ _prometheus_server_binary_install_dir }}/promtool check web-config %s"
    mode: 0640

# - name: Configure prometheus self-exporter if prometheus_server_exporter_sd_file is defined
#   blockinfile:
#     path: "{{ prometheus_server_exporter_sd_file }}"
#     block: |
#       - targets:
#         - {{ ansible_fqdn }}:{{ prometheus_server_web_listen_port }}
#         labels:
#           exporter: prometheus
#       {% if ansible_hostname in (all_ctrl_hostnames|default([trix_ctrl_hostname])) %}
#           luna_group: controller
#       {% endif %}
#     marker: "### {mark} ANSIBLE MANAGED BLOCK ({{ ansible_fqdn }}.prometheus_server_exporter)"
#   when:
#     - prometheus_server_exporter_sd_file is defined

- name: Configure firewalld
  firewalld:
    state: enabled
    port: "{{ prometheus_server_web_listen_port }}/tcp"
    permanent: "yes"
    immediate: "yes"
  when: ansible_virtualization_type != 'docker'


