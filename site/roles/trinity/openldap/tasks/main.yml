---
# tasks file for openldap

- debug:
    msg: "{{ openldap_server_dir_path }}"

- name: Install dependencies
  yum:
    name: python3-policycoreutils
    state: installed
  tags: install-only

# -- start sync
- block:
  - name: Ensure password loction exists
    file:
      path: '/etc/trinity/passwords/openldap'
      state: directory

  - name: Copy openldap password from sync
    copy:
      src: '{{ trix_sync }}/openldap/root.txt'
      dest: '/etc/trinity/passwords/openldap/'
  when: 
    - not primary | default(False)
    - ha | default(False)
# -- end sync

- name: Generate openldap root password and save it to /etc/trinity/passwords
  set_fact:
    tmp_pwd: "{{ lookup('password',
                          '/etc/trinity/passwords/openldap/root.txt
                           chars=ascii_letters,digits,hexdigits') }}"

- name: Get openldap root password from /etc/trinity/passwords
  set_fact:
    openldap_root_pwd: "{{ lookup('password',
                          '/etc/trinity/passwords/openldap/root.txt
                           chars=ascii_letters,digits,hexdigits') }}"

# sync
# -- start sync
- block:
  - name: Ensure openldap sync directory exists
    file:
      path: '{{ trix_sync }}/openldap'
      state: directory

  - name: Add openldap password to sync
    copy:
      src: '/etc/trinity/passwords/openldap/root.txt'
      dest: '{{ trix_sync }}/openldap/'
      mode: 0640
  when:
    - primary | default(True)
    - ha | default(False)
# -- end sync


- name: Install OpenLDAP packages
  yum:
    name: '{{ openldap_packages }}'
    state: present
    enablerepo:
      - plus
      - powertools
  tags: install-only

- name: Determine openldap version
  shell: "rpm -q openldap-servers|grep -oE '[0-9]\\.[0-9]'|tr -d '.'"
  register: openldap_version
  when: ansible_facts['os_family'] == "RedHat"

- debug:
    msg: "Openldap release {{ openldap_version.stdout }}"
  when: openldap_version is defined

- block:
    - name: Selinux fcontext on files
      sefcontext:
        target: "{{ openldap_server_conf_path }}(/.*)?"
        setype: slapd_db_t

- name: Hash OpenLDAP root password
  command: slappasswd -h {SSHA} -s {{ openldap_root_pwd }}
  register: openldap_root_pwd_hash
  changed_when: false
  when: primary | default(True)

- name: Adjust OpenLDAP server TLS configuration
  lineinfile:
    create: true
    path: '{{ openldap_server_defaults_file }}'
    regexp: '^SLAPD_URLS='
    line: 'SLAPD_URLS="{{ openldap_endpoints }}"'

- name: Adjust OpenLDAP client TLS configuration
  lineinfile:
    path: '/etc/openldap/ldap.conf'
    line: 'TLS_CACERT   /etc/openldap/certs/cluster-ca.crt'

- name: Enable OpenLDAP service
  systemd:
    name: slapd
    enabled: "yes"
  when: not ha|default(False)

- name: Get /etc/openldap/slapd.d status
  stat:
    path: '/etc/openldap/slapd.d'
  register: default_openldap_path

# - debug:
#    msg: "openldap_server_conf_path: {{ openldap_server_conf_path }}"

- block:
    - name: Ensure OpenLDAP configuration directory exists
      file:
        path: '{{ openldap_server_conf_path }}'
        state: directory
        owner: '{{ openldap_default_user }}'
        group: '{{ openldap_default_group }}'
        setype: slapd_db_t
        seuser: system_u
      when: primary | default(False)

    - name: Copy default configuration to {{ openldap_server_conf_path }}
      shell: rsync -raW -AX /etc/openldap/slapd.d/* {{ openldap_server_conf_path|quote }}
      args:
        creates: '{{ openldap_server_conf_path }}/cn=config.ldif'
      when: primary | default(True)

    - name: Delete default configuration
      file:
        path: '/etc/openldap/slapd.d'
        state: absent

    - name: Replace default configuration path with symlink to {{ openldap_server_conf_path }}
      file:
        src: '{{ openldap_server_conf_path }}'
        dest: '/etc/openldap/slapd.d'
        state: link
        force: "yes"

  when: openldap_server_conf_path|string not in '/etc/openldap/slapd.d'
        and default_openldap_path.stat.isdir


- name: Add cluster CA certificate to /etc/openldap/certs
  copy:
    src: '{{ openldap_tls_cacrt }}'
    dest: '/etc/openldap/certs/'

- name: Ensure OpenLDAP has access to the ssl certificates
  user:
    name: '{{ openldap_default_user }}'
    groups: '{{ ssl_cert_group }}'


- block:
  - name: Ensure OpenLDAP data directory exists
    file:
      path: '{{ openldap_server_dir_path }}'
      state: directory
      owner: '{{ openldap_default_user }}'
      group: '{{ openldap_default_group }}'
      setype: slapd_db_t
      seuser: system_u

  - name: Start OpenLDAP service
    systemd:
      name: slapd
      state: started
      enabled: "yes"

  - name: Copy OpenLDAP schemas
    copy:
      src: '{{ item }}'
      dest: '/etc/openldap/schema/'
      owner: '{{ openldap_default_user }}'
      group: '{{ openldap_default_group }}'
      mode: '0644'
    with_items:
      - rfc2307bis.ldif
      - autoinc.ldif
      - local_schema.ldif
  when: primary | default(True)

# ------------------------------- openldap <= 2.4
- block:
  - name: Load OpenLDAP schemas
    command: ldapadd -c -Y EXTERNAL -H ldapi:/// -Q -f /etc/openldap/schema/{{ item }}.ldif
    args:
      creates: '/etc/openldap/slapd.d/cn=config/cn=schema/cn={?}{{ item }}.ldif'
    with_items:
      - cosine
      - inetorgperson
      - rfc2307bis
      - autoinc
      - ppolicy

  - name: Render OpenLDAP configuration
    template:
      src: '{{ item }}.j2'
      dest: '/tmp/{{ item }}'
    with_items:
      - config.ldif
      - local.ldif
      - proxy.ldif
    changed_when: false

  - name: Copy OpenLDAP overlay configurations
    copy:
      src: '{{ item }}'
      dest: '/tmp/'
    with_items:
      - ppolicy.ldif
      - memberof.ldif

  - name: Load OpenLDAP global configuration
    command: ldapmodify -c -Y EXTERNAL -H ldapi:/// -Q -f /tmp/config.ldif
    args:
      creates: '/etc/openldap/slapd.d/cn=config.ldif'
    notify: restart openldap

  - name: Load OpenLDAP local configuration
    command: ldapmodify -c -Y EXTERNAL -H ldapi:/// -Q -f /tmp/{{ item }}
    args:
      creates: '/etc/openldap/slapd.d/cn=config/olcDatabase={?}hdb/olcOverlay={0}memberof.ldif'
    with_items:
      - config.ldif
      - local.ldif
      - proxy.ldif
      - ppolicy.ldif
      - memberof.ldif
    notify: restart openldap

  - name: Check local schemas
    command: 'ldapsearch -H ldapi:// -Y EXTERNAL -b "dc=local" "cn=pwdDefaultPolicy,ou=Policies,dc=local"'
    register: ldapsearch
    failed_when: false
    changed_when: false

  - name: Load OpenLDAP local schema
    command: >
      ldapadd -x -H ldapi:// -D "cn=manager,dc=local" -w {{ openldap_root_pwd }}
                               -f /etc/openldap/schema/local_schema.ldif
    ignore_errors: "yes"
    when: ldapsearch.rc == 32
  when: (primary | default(True)) and (openldap_version is defined and openldap_version.stdout|int < 25)

# ------------------------------- openldap 2.5+
- block:
  - name: Load OpenLDAP schemas
    command: ldapadd -c -Y EXTERNAL -H ldapi:/// -Q -f /etc/openldap/schema/{{ item }}.ldif
    args:
      creates: '/etc/openldap/slapd.d/cn=config/cn=schema/cn={?}{{ item }}.ldif'
    with_items:
      - cosine
      - inetorgperson
      - rfc2307bis
      - autoinc

  - name: Render OpenLDAP configuration
    template:
      src: '{{ item }}-25.j2'
      dest: '/tmp/{{ item }}'
    with_items:
      - config.ldif
      - local.ldif
      - proxy.ldif
    changed_when: false

  - name: Copy OpenLDAP overlay configurations
    copy:
      src: '{{ item }}'
      dest: "/tmp/{{ item.split('-') | first }}"
    with_items:
      - memberof.ldif-25

  - name: Load OpenLDAP global configuration
    command: ldapmodify -c -Y EXTERNAL -H ldapi:/// -Q -f /tmp/config.ldif
    args:
      creates: '/etc/openldap/slapd.d/cn=config.ldif'
    notify: restart openldap

  - name: Load OpenLDAP local configuration
    command: ldapmodify -c -Y EXTERNAL -H ldapi:/// -Q -f /tmp/{{ item }}
    args:
      creates: '/etc/openldap/slapd.d/cn=config/olcDatabase={?}mdb/olcOverlay={0}memberof.ldif'
    with_items:
      - config.ldif
      - local.ldif
      - proxy.ldif
      - memberof.ldif
    notify: restart openldap
  
  - name: Load slapcat data
    command: "slapcat -n 0"
    register: slapcat_data

  - block:
    - name: Load ppolicy module
      command: "ldapadd -Y EXTERNAL -H ldapi:/// -f {{ role_path }}/files/ppolicyload.ldif"

    - name: Load ppolicy overlay
      command: "ldapadd -Y EXTERNAL -H ldapi:/// -f {{ role_path }}/files/ppolicyoverlay.ldif"
    when: "'ppolicy' not in slapcat_data.stdout"
    ignore_errors: true

  - name: Check local schemas
    command: 'ldapsearch -H ldapi:// -Y EXTERNAL -b "dc=local" "cn=pwdDefaultPolicy,ou=Policies,dc=local"'
    register: ldapsearch
    failed_when: false
    changed_when: false

  - name: Load OpenLDAP local schema
    command: >
      ldapadd -x -H ldapi:// -D "cn=manager,dc=local" -w {{ openldap_root_pwd }}
                               -f /etc/openldap/schema/local_schema.ldif
    ignore_errors: "yes"
    when: ldapsearch.rc == 32
  when: (primary | default(True)) and (openldap_version is defined and openldap_version.stdout|int > 24)

# ---------------------

- name: Add pacemaker resource
  pcs_resource:
    name: 'openldap'
    resource_class: 'systemd'
    resource_type: 'systemd:slapd'
    options: 'meta migration-threshold=3 failure-timeout=120s op monitor interval=30 --group Trinity-stack'
    state: present
  when: 
    - primary | default(True)
    - ha | default(False)
  tags: pcs

- meta: flush_handlers
