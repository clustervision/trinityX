---
# tasks file for nfs-mounts

- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yaml"
  ignore_errors: true

- name: Install nfs packages
  yum:
    name: '{{ nfs_packages }}'
    state: present
  when: ansible_facts['os_family'] == "RedHat"
  retries: "{{ rpm_retries | default(3) }}"
  delay: "{{ rpm_delay | default(15) }}"

- name: Install nfs packages
  apt:
    name: '{{ nfs_packages }}'
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Render nfs_mounts based on solely nfs_remote_mask info
  set_fact:
    new_nfs_mounts: "{{ new_nfs_mounts|d([]) + [item|combine({'path': item.mount if item.mount is defined else item.name})] }}"
  loop: "{{ nfs_remote_mask }}"
  when: 
    - (nfs_mounts is not defined) or nfs_mounts | length == 0
    - nfs_remote_mask is defined
    - nfs_remote_mask | length > 0
    - item.type == 'nfs'

- block:
  - name: Render nfs_mounts based on nfs_mounts and nfs_remote_mask info
    set_fact:
      nfs_mounts_: "{{ nfs_mounts_|d([]) + [item|combine({'type': _type|from_yaml|default('nfs',true),
                                                            'remote': _remote|from_yaml|default(item.remote,true),
                                                            'options': _options|from_yaml|default(item.options,true),
                                                            'xmount': _xmount|from_yaml|default(False,true)})] }}"
    loop: "{{ nfs_mounts }}"
    vars:
      _remote: |
        {% if item.path in nfs_remote_mask | map(attribute="name") or item.path in nfs_remote_mask | map(attribute="mount",default="__undefined__") %}
          {% for disk in nfs_remote_mask %}
            {% if disk.name == item.path or (disk.mount is defined and disk.mount == item.path) %}
              {% if disk["type"] == "nfs" %}
                {{ disk["remote"] }}
              {% elif nfs_use_mask %}
                {% if disk["xmount"] is defined and disk["xmount"] %}
                  {% set _details = item["remote"].split(':') %}
                  {{ _details[0]+':'+nfs_prefix_path+_details[1] }}
                {% elif disk["type"] in ['lustre','beegfs','mmfs','gpfs','panfs'] %}
                  {{ disk["remote"] }}
                {% elif item.remote is defined %}
                  {{ item.remote }}
                {% endif %}
              {% elif item.remote is defined %}
                {{ item.remote }}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% elif nfs_use_mask %}
          {% for disk in nfs_remote_mask %}
            {% if disk.partitions is defined %}
              {% for partition in disk.partitions %}
                {% if partition["mount"] == item.path %}
                  {% if partition["xmount"] is defined and partition["xmount"] %}
                    {% set _details = item["remote"].split(':') %}
                    {{ _details[0]+':'+nfs_prefix_path+_details[1] }}
                  {% elif item.remote is defined %}
                    {{ item.remote }}
                  {% endif %}
                {% endif %}
              {% endfor %}
            {% endif %}
          {% endfor %}
        {% elif item.remote is defined %}
          {{ item.remote }}
        {% endif %}
      _options: |
        {% if nfs_use_mask %}
          {% if item.path in nfs_remote_mask | map(attribute="name") or item.path in nfs_remote_mask | map(attribute="mount",default="__undefined__") %}
            {% for disk in nfs_remote_mask %}
              {% if disk.name == item.path or (disk.mount is defined and disk.mount == item.path) %}
                {% if disk["type"] in ['nfs','lustre','beegfs','mmfs','gpfs','panfs']  and "options" in disk %}
                  {{ disk["options"] }}
                {% elif item.options is defined %}
                  {{ item.options }}
                {% endif %}
              {% endif %}
            {% endfor %}
          {% elif item.options is defined %}
            {{ item.options }}
          {% endif %}
        {% elif item.options is defined %}
          {{ item.options }}
        {% endif %}
      _xmount: |
        {% if item.path in nfs_remote_mask | map(attribute="name") or item.path in nfs_remote_mask | map(attribute="mount",default="__undefined__") %}
          {% for disk in nfs_remote_mask %}
            {% if disk.name == item.path or (disk.mount is defined and disk.mount == item.path) %}
              {% if nfs_use_mask and disk["type"] not in ['nfs','lustre','beegfs','mmfs','gpfs','panfs'] %}
                {% if disk["xmount"] is defined and disk["xmount"] %}
                  True
                {% else %}
                  False
                {% endif %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% elif nfs_use_mask %}
          {% for disk in nfs_remote_mask %}
            {% if disk.partitions is defined %}
              {% for partition in disk.partitions %}
                {% if partition["mount"] == item.path %}
                  {% if partition["xmount"] is defined and partition["xmount"] %}
                    True
                  {% else %}
                    False
                  {% endif %}
                {% endif %}
              {% endfor %}
            {% endif %}
          {% endfor %}
        {% else %}
          False
        {% endif %}
      _type: |
        {% if nfs_use_mask %}
          {% if item.path in nfs_remote_mask | map(attribute="name") or item.path in nfs_remote_mask | map(attribute="mount",default="__undefined__") %}
            {% for disk in nfs_remote_mask %}
              {% if disk.name == item.path or (disk.mount is defined and disk.mount == item.path) %}
                {% if disk["type"] is defined %}
                  {{ disk["type"] }}
                {% endif %}
              {% endif %}
            {% endfor %}
          {% endif %}
        {% elif item.type is defined %}
          {{ item.type }}
        {% endif %}


  - name: Overwrite nfs_mounts fact
    set_fact:
      new_nfs_mounts: "{{ nfs_mounts_ }}"
  when: 
    - nfs_remote_mask is defined
    - nfs_remote_mask | length > 0
    - nfs_mounts is defined
    - nfs_mounts | length > 0

- name: Overwrite nfs_mounts fact
  set_fact:
    new_nfs_mounts: "{{ nfs_mounts }}"
  when: 
    - nfs_mounts_ is not defined
    - nfs_mounts is defined
    - nfs_mounts | length > 0

- block:
  - name: Ensure mountpoints exist
    file:
      path: '{{ item.path }}'
      owner: root
      group: root
      mode: '0755'
      state: directory
    with_items: '{{ new_nfs_mounts }}'
    when:
      - (item.type is defined and item.type != 'manual') or item.type is not defined
      - (ansible_connection in "chroot" and not nfs_only_xmount) or (nfs_only_xmount and item.xmount)

  - name: Setup NFS mounts for RedHat family
    mount:
      path: '{{ item.path }}'
      src: '{{ item.remote }}'
      fstype: '{{ item.type | default("nfs") }}'
      opts: '{{ item.options }},proto={{ "rdma" if ((item.type is not defined) or item.type == "nfs") and nfs_enable_rdma else "tcp" }}'
      state: '{{ "present" if ansible_connection in "chroot" else "mounted" }}'
    with_items: '{{ new_nfs_mounts }}'
    when: 
      - ansible_facts['os_family'] == "RedHat"
      - (item.type is defined and item.type != 'manual') or item.type is not defined
      - (ansible_connection in "chroot" and not nfs_only_xmount) or (nfs_only_xmount and item.xmount)

  - name: Setup NFS mounts for Debian family
    mount:
      path: '{{ item.path }}'
      src: '{{ item.remote }}'
      fstype: "{{ item.type | default('nfs') }}"
      opts: '{{ item.options }}'
      state: '{{ "present" if ansible_connection in "chroot" else "mounted" }}'
    with_items: '{{ new_nfs_mounts }}'
    when: 
      - ansible_facts['os_family'] == "Debian"
      - (item.type is defined and item.type != 'manual') or item.type is not defined
      - (ansible_connection in "chroot" and not nfs_only_xmount) or (nfs_only_xmount and item.xmount)
  when: new_nfs_mounts is defined
