---

- name: Generate grafana admin password and save it to /etc/trinity/passwords
  set_fact:
    grafana_admin_pwd: "{{ lookup('password',
                          '/etc/trinity/passwords/grafana/admin.txt',
                           chars=['ascii_letters','digits','hexdigits']) }}"
- name: Retrieve grafana_alertmanager_basic_auth
  set_fact:
    grafana_alertmanager_basic_auth: "{{ grafana_alertmanager_basic_auth_file is defined and grafana_alertmanager_basic_auth_file | length > 0 }}"
- name: Retrieve grafana_alertmanagerbasic_auth_user
  set_fact:
    grafana_alertmanager_basic_auth_user: "{{ grafana_alertmanager_basic_auth_file | basename | regex_replace('(.*)\\..*', '\\1') }}"
- name: Retrieve grafana_alertmanager_basic_auth_pwd
  set_fact:
    grafana_alertmanager_basic_auth_pwd: "{{ lookup('file', grafana_alertmanager_basic_auth_file) }}"



- name: Set protocol
  set_fact:
    grafana_protocol: "https"
  when: enable_ssl

- name: Set protocol
  set_fact:
    grafana_protocol: "http"
  when: not enable_ssl

- name: Install dependencies
  yum:
    name: python3-firewall
    state: present
  when: ansible_virtualization_type != 'docker'
  retries: "{{ rpm_retries | default(3) }}"
  delay: "{{ rpm_delay | default(15) }}"

- name: Install grafana dashboard
  yum:
    name: "{{ grafana_rpm }}"
    disable_gpg_check: true
    state: present
  retries: "{{ rpm_retries | default(3) }}"
  delay: "{{ rpm_delay | default(15) }}"

- name: Gather package facts
  package_facts:
    manager: auto

- name: Install camptocamp-prometheus-alertmanager-datasource (Grafana < 11.0.0)
  command: grafana-cli --pluginUrl="https://updates.clustervision.com/trinityx/external/monitoring/camptocamp-prometheus-alertmanager-datasource/{{ trix_stream }}/camptocamp-prometheus-alertmanager-datasource-2.2.0.zip" plugins install  camptocamp-prometheus-alertmanager-datasource
  when: ansible_facts.packages['grafana'][0]['version'] is version('10.2.0', '<')

- name: Install grafana-camptocamp-prometheus-alertmanager-datasource (Grafana >= 11.0.0)
  command: grafana cli --pluginUrl="https://updates.clustervision.com/trinityx/external/monitoring/camptocamp-prometheus-alertmanager-datasource/{{ trix_stream }}/camptocamp-prometheus-alertmanager-datasource-2.2.0.zip" plugins install  camptocamp-prometheus-alertmanager-datasource
  when: ansible_facts.packages['grafana'][0]['version'] is version('10.2.0', '>=')

- name: Configure LDAP
  template:
    src: ldap.toml.j2
    dest: /etc/grafana/ldap.toml
    owner: root
    group: grafana
  notify: restart grafana-server
  when: ldap_auth

- name: Configure grafana-server
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: grafana
  notify: restart grafana-server

- name: Add grafana user to ssl group
  user:
    name: grafana
    groups: ssl
    append: "yes"
  when: enable_ssl


- name: Ensure grafana dashboard directory exists
  file:
    state: directory
    path: "{{ grafana_dashboard_dir }}"
    owner: grafana
    group: grafana

- name: Ensure provisioning directory exists
  file:
    state: directory
    path: "{{ grafana_provisioning_dir }}"
    owner: grafana
    group: grafana
  with_items:
    - datasources
    - dashboards

- name: Configure Grafana datasources
  template:
    src: trinityx-datasource.yaml.j2
    dest: "{{ grafana_provisioning_dir }}/datasources/trinityx-datasource.yaml"
  notify: restart grafana-server

- name: Configure Grafana dashboards
  template:
    src: trinityx-dashboards.yaml.j2
    dest:  "{{ grafana_provisioning_dir }}/dashboards/trinityx-dashboards.yaml"
  notify: restart grafana-server

- name: Place dashboards
  copy:
    src: "{{ item }}"
    dest: "{{ grafana_dashboard_dir }}/"
    owner: grafana
    group: grafana
  with_fileglob:
  - "files/dashboards/*"
  notify: restart grafana-server

- name: Place branding
  copy:
    src: triX_7.png
    dest: /usr/share/grafana/public/triX_7.png

- name: Start and enable Grafana-server
  systemd:
    name: grafana-server
    state: started
    enabled: true

# - name: Install piechart
#   grafana_plugin:
#     name: grafana-piechart-panel
#     version: latest
#     state: present
#   notify: restart grafana-server

- name: List organisations
  uri:
    method: GET
    url: "{{ grafana_protocol }}://{{ ansible_default_ipv4.address }}:{{ grafana_port }}/api/org/"
    user: "{{ grafana_admin }}"
    password: '{{ grafana_admin_pwd }}'
    return_content: true
    force_basic_auth: true
    validate_certs: "no"
    use_proxy: "no"
  register: grafana_orgs

- name: Configure organization
  uri:
    method: PUT
    url: "{{ grafana_protocol }}://{{ ansible_default_ipv4.address }}:{{ grafana_port }}/api/org"
    user: "{{ grafana_admin }}"
    password: '{{ grafana_admin_pwd }}'
    validate_certs: "no"
    force_basic_auth: true
    use_proxy: "no"
    body_format: json
    body:
      name: '{{ grafana_org_name }}'
  when: grafana_org_name not in grafana_orgs

- name: Set home dashboard
  uri:
    method: PUT
    url: "{{ grafana_protocol }}://{{ ansible_default_ipv4.address }}:{{ grafana_port }}/api/org/preferences"
    user: "{{ grafana_admin }}"
    password: '{{ grafana_admin_pwd }}'
    validate_certs: "no"
    force_basic_auth: true
    use_proxy: "no"
    body_format: json
    body:
      homeDashboardUID: "trixhome"

- name: Configure firewalld
  firewalld:
    state: enabled
    port: "{{ grafana_port }}/tcp"
    permanent: "yes"
    immediate: "yes"
  when: ansible_virtualization_type != 'docker'
