---

- name: Generate root password for MongoDB and save it to /etc/trinity/passwords
  set_fact:
    tmp_pwd: "{{ lookup('password',
                          '/etc/trinity/passwords/mongo/root.txt
                           chars=ascii_letters,digits,hexdigits') }}"

- name: Get root password for MongoDB from /etc/trinity/passwords
  set_fact:
    mongo_root_pwd: "{{ lookup('password',
                          '/etc/trinity/passwords/mongo/root.txt
                           chars=ascii_letters,digits,hexdigits') }}"

- name: Install MongoDB packages
  yum:
    name: '{{ item }}'
    state: present
  with_items: '{{ mongo_packages }}'
  tags: install-only

- name: Create config file
  template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf
    backup: yes
  notify: "restart mongod"

- name: Ensure {{ mongo_db_path }} exists
  file:
    path: '{{ mongo_db_path }}'
    owner: mongodb
    group: mongodb
    state: directory
  when: primary|default(True)

- name: Enable MongoDB service
  service:
    name: mongod
    enabled: yes
  when: not ha|default(False)

- meta: flush_handlers

- block:

  - name: Start MongoDB service
    service:
      name: mongod
      state: started

  - name: "Create root user"
    t_mongodb_user:
      name: "root"
      database: "admin"
      role: "root"
      password: "{{ mongo_root_pwd }}"
      state: present

  - name: Add pacemaker resource
    pcs_resource:
      name: 'mongod'
      resource_class: 'systemd'
      resource_type: 'systemd:mongod'
      options: 'op monitor interval=0 --group Trinity-stack'
      state: present
    when: ha | default(False)
    tags: pcs

  when: primary | default(True)

- name: Render /root/.mongorc.js
  template:
    src: "mongorc.js.j2"
    dest: "/root/.mongorc.js"
    backup: yes
