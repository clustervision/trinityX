---
- name: Make .ssh root directory
  file:
    path: "{{ image_path }}/root/.ssh"
    mode: 0700
    owner: root
    group: root
    state: directory

- name: Ensure /etc/trinity/passwords/images/{{ image_name }} exists
  file:
    path: '/etc/trinity/passwords/images/{{ image_name }}'
    state: directory

- name: Store root password if defined
  template:
    src: root.txt
    dest: '/etc/trinity/passwords/images/{{ image_name }}/root.txt'
  when: image_password|default([])

- name: Disable tinysshd if it is there
  shell: "chroot {{ image_path }} systemctl disable tinysshd.socket"
  ignore_errors: true

- name: Generate SSH keys
  user:
    name: root
    generate_ssh_key: true
    ssh_key_file: "{{ image_path }}/root/.ssh/id_rsa"

- name: Add controller's key to authorized keys
  authorized_key:
    user: root
    state: present
    key: '{{ lookup("file", "/root/.ssh/id_rsa.pub") }}'
    path: "{{ image_path }}/root/.ssh/authorized_keys"

- name: Add cluster key to authorized keys
  authorized_key:
    user: root
    state: present
    key: '{{ lookup("file", "/root/.ssh/id_cluster_rsa.pub") }}'
    path: "{{ image_path }}/root/.ssh/authorized_keys"
  when: ha | default(False)

- name: Create node config directory
  file:
    path: '{{ image_path }}/{{ trix_luna }}/node/config/'
    state: directory

- name: Render node luna.ini
  template:
    src: 'luna2.ini.j2'
    dest: '{{ image_path }}/{{ trix_luna }}/node/config/luna.ini'
    owner: root
    group: root
    mode: 0640

- name: Defining group name
  set_fact:
    ubuntu_group_name: '{{ image_name | regex_replace("^(.*)-image$", "\1-group") }}'

- name: Verify if ubuntu group already exists in luna
  shell: "luna group show {{ ubuntu_group_name }}"
  register: ubuntu_group_in_luna
  ignore_errors: true

- name: Verify if image already exists in luna
  shell: "luna osimage show {{ image_name }}"
  register: ubuntu_image_in_luna
  ignore_errors: true

- name: Fetching the distribution version from the image
  shell: "grep DISTRIB_RELEASE {{ image_path }}/etc/lsb-release | awk -F'=' '{ print $2 }' | awk -F '.' '{ print $1 }' | grep '^.\\+$' || echo '22'"
  ignore_errors: true
  register: image_major_version

- name: Creating image in luna
  shell: "luna osimage add --path \"{{ trix_images }}/{{ image_name }}\" --distribution ubuntu --osrelease {{ image_major_version.stdout }} --quick-kerneloptions \"net.ifnames=0 biosdevname=0\" {{ image_name }}"
  when: ubuntu_image_in_luna is defined and ubuntu_image_in_luna.rc|int != 0

- name: Kernel version in image
  shell: "ls {{ image_path }}/lib/modules|sort|tail -n1"
  register: kernel_version
  changed_when: false

- name: Set the kernel version for image
  shell: "luna osimage change --kernelversion {{ kernel_version.stdout }} {{ image_name }}"

- block:
  - name: preparing part/post script
    copy:
      src: "ubuntu/{{ item }}"
      dest: "/tmp/{{ item }}"
    with_items:
      - part.rd
      - post.rd

  - name: Creating group in luna
    shell: "luna group add --osimage {{ image_name }} -qpart /tmp/part.rd -qpost /tmp/post.rd {{ ubuntu_group_name }}"
  when: ubuntu_group_in_luna is defined and ubuntu_group_in_luna.rc|int != 0

