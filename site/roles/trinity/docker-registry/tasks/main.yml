---
# tasks file for docker-registry

#- name: Pull docker registry image
#  docker_image:
#    name: registry

- shell: docker images | grep registry
  register: registry
  failed_when: false
  changed_when: false

- name: Pull docker registry image
  shell: docker pull registry
  when: registry.rc

- name: Create shared storage location for the registry
  file:
    path: '{{ docker_registry_path }}'
    state: directory
  when: primary | default(True)

#- name: Run registry contrainer
#  docker_container:
#    name: registry
#    image: registry
#    state: started
#    restart_policy: always
#    exposed_ports:
#      - 5000
#    published_ports:
#      - '0.0.0.0:5000:5000'
#    volumes:
#      - '{{ docker_ssl_path }}:/certs:ro'
#      - '{{ docker_registry_path }}:/var/lib/registry'
#    env:
#      REGISTRY_HTTP_TLS_CERTIFICATE: '/certs/{{ docker_ssl_cert }}'
#      REGISTRY_HTTP_TLS_KEY: '/certs/{{ docker_ssl_key }}'

- name: Render docker-registry systemd unit file
  template:
    src: 'docker-registry.service'
    dest: '/usr/lib/systemd/system/docker-registry.service'
  notify: restart docker-registry

- name: Enable docker-registry service
  file:
# service:
#   name: docker-registry
#   enabled: yes
    src: '/usr/lib/systemd/system/docker-registry.service'
    dest: '/etc/systemd/system/multi-user.target.wants/docker-registry.service'
    state: link
  when: not ha | default(False)

- name: Start docker-registry service
  service:
    daemon_reload: yes
    name: docker-registry
    state: started
  when: primary | default(True)

- name: Add pacemaker resource
  pcs_resource:
    name: 'docker-registry'
    resource_class: 'systemd'
    resource_type: 'systemd:docker-registry'
    options: 'op monitor interval=0 --group Trinity-stack'
    state: present
  tags: pcs
  when: ha | default(False)
        and primary | default(True)

